set mouse=a
set number
set smartindent
set autoindent
set shiftwidth=0
set noexpandtab
set tabstop=4
set softtabstop=4
set incsearch
set encoding=UTF-8

" Plugins
call plug#begin('~/.vim/plugged')

" ========================================
" APPEARANCE
" Plug 'phanviet/vim-monokai-pro'
" Plug 'sainnhe/gruvbox-material'
" Plug 'gruvbox-community/gruvbox'
" Plug 'lifepillar/vim-solarized8'
" Plug 'glepnir/oceanic-material'
" Plug 'tyrannicaltoucan/vim-deep-space'
" Plug 'arcticicestudio/nord-vim'

" ========================================
" EDITING PLUGINS
" Plug 'airblade/vim-gitgutter'
" Plug 'tpope/vim-fugitive'
" Plug 'sbdchd/neoformat'
" Plug 'dense-analysis/ale'
" Plug 'prabirshrestha/vim-lsp'
" Plug 'mattn/vim-lsp-settings'
" Plug 'prabirshrestha/asyncomplete.vim'
" Plug 'prabirshrestha/asyncomplete-lsp.vim'
" Use release branch (recommend)
" Plug 'neoclide/coc.nvim', {'branch': 'release'}
" Plug 'editorconfig/editorconfig-vim'
" Plug 'nvim-treesitter/nvim-treesitter', {'do': ':TSUpdate'}

" ========================================
" UI PLUGINS
" Plug 'preservim/nerdtree'
" Plug 'ryanoasis/vim-devicons'
" Plug 'vim-airline/vim-airline'
" Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }

" ========================================
" EXTRA TOOLS
" Plug 'iamcco/markdown-preview.nvim', { 'do': { -> mkdp#util#install() }, 'for': ['markdown', 'vim-plug']}
" if has('nvim')
  " Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
" else
  " Plug 'Shougo/deoplete.nvim'
  " Plug 'roxma/nvim-yarp'
  " Plug 'roxma/vim-hug-neovim-rpc'
" endif

call plug#end()

let mapleader = " "
let g:netrw_banner = 0
let g:netrw_winsize = 25
let g:netrw_browse_split = 4
let g:netrw_liststyle = 1
let g:netrw_fastbrowse = 2
let NERDTreeShowBookmarks=1
let NERDTreeShowHidden=1
" let g:lsp_settings_root_markers = ['.projections.json', '.git', '.git/', '.vim/']
" let g:ale_completion_enabled = 1
" let g:deoplete#enable_at_startup = 1
" let g:ale_completion_autoimport = 1
let g:ale_fixers = [ 'black' ]
" let g:lsp_diagnostics_enabled = 0
let g:gitgutter_map_keys = 0
let g:lsp_diagnostics_highlights_insert_mode_enabled = 0

" WINDOW NAV
nnoremap <leader>h :wincmd h<CR>
nnoremap <leader>j :wincmd j<CR>
nnoremap <leader>k :wincmd k<CR>
nnoremap <leader>l :wincmd l<CR>

" BUFFER MANAGEMENT
nnoremap <leader>w :w<CR>
nnoremap <leader>q :q<CR>
nnoremap <leader>a :qa<CR>
nnoremap <leader>ss :split<CR>
nnoremap <leader>sv :vsplit<CR>

" TERMINALS
nnoremap <leader>tt :split term://zsh<CR>
nnoremap <leader>tv :vsplit term://zsh<CR>

" NETRW NAV
nnoremap <leader>pv :Sex!<CR>

" EDITING
nnoremap <leader>y "*y
vnoremap <leader>y "*y
nnoremap <leader>p "*p
vnoremap <leader>p "*p
nnoremap <leader>Y gg"*yG
nnoremap <leader>/ :let @/=""<CR>
nnoremap <leader>f :set foldmethod=indent<CR> :set foldmethod=manual<CR>

" NERDTREE MAPPINGS
nnoremap <leader>nt :NERDTreeToggle<CR> 
nnoremap <leader>no :NERDTree 
nnoremap <leader>nb :Bookmark 
nnoremap <leader>nf :NERDTreeFind 

" QUICK FIX
nnoremap <leader>co :cope<CR>
nnoremap <leader>cc :ccl<CR> 

" FUZZY FINDER
nnoremap <leader><space> :FZF<CR> 

" Setting Theme
" colo nord
hi Visual ctermbg=blue ctermfg=black

augroup exgroup
	autocmd!
	autocmd VimEnter * :NERDTree
augroup END

au BufNewFile,BufRead Jenkinsfile setf groovy
